(function(){"use strict";function e(e,n){function t(e){var n=window.getComputedStyle(e),t=function(e){return parseInt(n.getPropertyValue(e).replace("px",""))||0};return{left:e.getBoundingClientRect().left+t("padding-left"),top:e.getBoundingClientRect().top+t("padding-top")}}function r(){b=!1,c.removeEventListener("mousemove",s),c.removeEventListener("mouseup",a),h.length||(f=null)}function i(e){x[e.data.node.id]||(h.push(e.data.node),x[e.data.node.id]=!0,h.length&&!b&&(f=h[h.length-1],v.addEventListener("mousedown",d)))}function o(e){var n=h.map(function(e){return e}).indexOf(e.data.node);h.splice(n,1),delete x[e.data.node.id],h.length&&!b?f=h[h.length-1]:v.removeEventListener("mousedown",d)}function d(e){b=!0;var n=l.graph.nodes().length;if(f&&n>1){v.removeEventListener("mousedown",d),c.addEventListener("mousemove",s),c.addEventListener("mouseup",a);var t,r;for(t in l.cameras)r=l.cameras[t],void 0!==r.edgequadtree&&(r.edgequadtree._enabled=!1);g.settings({mouseEnabled:!1,enableHovering:!1}),l.refresh(),u.dispatchEvent("startdrag",{node:f,captor:e,renderer:g})}}function a(e){b=!1,v.addEventListener("mousedown",d),c.removeEventListener("mousemove",s),c.removeEventListener("mouseup",a);var n,t;for(n in l.cameras)t=l.cameras[n],void 0!==t.edgequadtree&&(t.edgequadtree._enabled=!0);g.settings({mouseEnabled:!0,enableHovering:!0}),l.refresh(),E&&u.dispatchEvent("drop",{node:f,captor:e,renderer:g}),u.dispatchEvent("dragend",{node:f,captor:e,renderer:g}),E=!1,f=null}function s(e){function n(){for(var n=t(g.container),r=e.clientX-n.left,i=e.clientY-n.top,o=Math.cos(m.angle),d=Math.sin(m.angle),a=l.graph.nodes(),s=[],c=0;2>c;c++){var v=a[c],h={x:v.x*o+v.y*d,y:v.y*o-v.x*d,renX:v[p+"x"],renY:v[p+"y"]};s.push(h)}if(s[0].x===s[1].x&&s[0].y===s[1].y){var x=0===s[0].renX?1:s[0].renX,b=0===s[0].renY?1:s[0].renY;r=s[0].x/x*(r-s[0].renX)+s[0].x,i=s[0].y/b*(i-s[0].renY)+s[0].y}else{var x=(s[1].renX-s[0].renX)/(s[1].x-s[0].x),b=(s[1].renY-s[0].renY)/(s[1].y-s[0].y);s[1].x===s[0].x&&(x=b),s[1].y===s[0].y&&(b=x),r=(r-s[0].renX)/x+s[0].x,i=(i-s[0].renY)/b+s[0].y}f.x=r*o-i*d,f.y=i*o+r*d,l.refresh(),E=!0,u.dispatchEvent("drag",{node:f,captor:e,renderer:g})}if(navigator.userAgent.toLowerCase().indexOf("firefox")>-1){clearTimeout(r);var r=setTimeout(n,0)}else n()}sigma.classes.dispatcher.extend(this);var u=this,l=e,c=document.body,g=n,v=n.container.lastChild,m=n.camera,f=null,p="",h=[],x={},b=!1,E=!1;n instanceof sigma.renderers.svg&&(v=n.container.firstChild),p=n instanceof sigma.renderers.webgl?n.options.prefix.substr(5):n.options.prefix,n.bind("overNode",i),n.bind("outNode",o),n.bind("click",r),l.bind("kill",function(){u.unbindAll()}),this.unbindAll=function(){v.removeEventListener("mousedown",d),c.removeEventListener("mousemove",s),c.removeEventListener("mouseup",a),g.unbind("overNode",i),g.unbind("outNode",o)}}if("undefined"==typeof sigma)throw"sigma is not declared";sigma.utils.pkg("sigma.plugins");var n={};sigma.plugins.dragNodes=function(t,r){return n[t.id]||(n[t.id]=new e(t,r)),t.bind("kill",function(){sigma.plugins.killDragNodes(t)}),n[t.id]},sigma.plugins.killDragNodes=function(t){n[t.id]instanceof e&&(n[t.id].unbindAll(),delete n[t.id])}}).call(window);